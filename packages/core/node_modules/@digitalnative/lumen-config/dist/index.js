"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const lumen_events_1 = require("@digitalnative/lumen-events");
const prompt = require("prompt");
const fs = require("fs");
const properties = [
    {
        name: "nomics",
        validator: /^[a-zA-Z\s\-]+$/,
        warning: "API key must be only letters, spaces, or dashes",
    },
    {
        name: "finnhub",
        validator: /^[a-zA-Z\s\-]+$/,
        warning: "API key must be only letters, spaces, or dashes",
    },
];
function onErr(err) {
    console.log(err);
    return 1;
}
class LumenConfig {
    constructor({ dir = "./lumen-config.json" }) {
        const eventsOptions = this.eventManagerOptions(this);
        this.events = new lumen_events_1.EventManager(eventsOptions);
        if (fs.existsSync(dir)) {
            //file exists
            // load config file
            const config = JSON.parse(fs.readFileSync(dir, "utf8"));
            for (const [key, value] of Object.entries(config)) {
                this[key] = value;
            }
            //this.nomics = config.nomics;
            //this.finnhub = config.finnhub;
            //this.mnemonic = config.mnemonic;
            //this.rpc = config.rpc;
        }
    }
    eventManagerOptions(config) {
        let muteLogging;
        const { quiet, logger, subscribers } = config;
        if (quiet)
            muteLogging = true;
        return { logger, muteLogging, subscribers };
    }
    static default(dir) {
        return new LumenConfig(dir);
    }
}
exports.default = LumenConfig;
