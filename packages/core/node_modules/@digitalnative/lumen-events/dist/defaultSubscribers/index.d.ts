declare const _default: {
    client: {
        initialization: () => void;
        handlers: {
            "client:start": (() => void)[];
            "client:init": (() => void)[];
            "client:next": (() => void)[];
            "client:wait": (() => void)[];
            "client:fail": (({ error }: {
                error: any;
            }) => void)[];
        };
    };
    fetch: {
        initialization: () => void;
        handlers: {
            "fetch:start": (({ symbol }: {
                symbol: any;
            }) => void)[];
            "fetch:succeed": (({ symbol, price }: {
                symbol: any;
                price: any;
            }) => void)[];
            "fetch:fail": (({ symbol, why }: {
                symbol: any;
                why: any;
            }) => void)[];
        };
    };
    submit: {
        initialization: () => void;
        handlers: {
            "submit:ready": (({ assetName, price }: {
                assetName: any;
                price: any;
            }) => void)[];
            "submit:inBlock": (({ blockHash, assetName, price }: {
                blockHash: any;
                assetName: any;
                price: any;
            }) => void)[];
            "submit:success": (({ blockHash, assetName, price }: {
                blockHash: any;
                assetName: any;
                price: any;
            }) => void)[];
            "submit:fail": (({ blockHash, assetName, price, error }: {
                blockHash: any;
                assetName: any;
                price: any;
                error: any;
            }) => void)[];
        };
    };
    hunt: {
        initialization: () => void;
        handlers: {
            "hunt:start": (() => void)[];
            "hunt:init": (() => void)[];
            "hunt:next": (() => void)[];
            "hunt:scan": (({ vaults }: {
                vaults: any;
            }) => void)[];
            "hunt:vault": (({ i, vaultAddr, collateral, debt, cAmount, dAmount, mcr, lfr, sfr, on, status, HP, }: {
                i: any;
                vaultAddr: any;
                collateral: any;
                debt: any;
                cAmount: any;
                dAmount: any;
                mcr: any;
                lfr: any;
                sfr: any;
                on: any;
                status: any;
                HP: any;
            }) => void)[];
            "hunt:vaultSafe": (() => void)[];
            "hunt:vaultLiquidated": (() => void)[];
            "hunt:vaultFail": (() => void)[];
            "hunt:liquidateSuccess": (() => void)[];
            "hunt:fail": (({ error }: {
                error: any;
            }) => void)[];
            "hunt:networkChange": (({ link }: {
                link: any;
            }) => void)[];
        };
    };
};
export default _default;
